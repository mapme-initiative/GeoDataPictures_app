(function(){"use strict";var e={782:function(e,t,n){var o=n(5130),r=n(6768);const a={id:"app"};function i(e,t,n,o,i,s){const l=(0,r.g2)("MapWithExif");return(0,r.uX)(),(0,r.CE)("div",a,[(0,r.bF)(l)])}var s=n(4232);const l={style:{"text-align":"center"}},c=["src"],u={style:{"font-size":"12px",margin:"0",color:"gray"}},p={style:{"font-size":"12px",margin:"0",color:"gray"}},d={style:{"font-size":"12px",margin:"0",color:"gray"}},m={style:{"margin-top":"10px"}},f={style:{"margin-top":"10px"}};function g(e,t,n,o,a,i){const g=(0,r.g2)("l-tile-layer"),h=(0,r.g2)("l-popup"),y=(0,r.g2)("l-marker"),b=(0,r.g2)("l-map");return(0,r.uX)(),(0,r.CE)("div",null,[t[4]||(t[4]=(0,r.Lk)("h1",null,"GeoDataPictures",-1)),(0,r.Lk)("input",{type:"file",onChange:t[0]||(t[0]=(...e)=>i.handleFileInput&&i.handleFileInput(...e)),accept:"image/*,image/heic,image/heif",multiple:""},null,32),(0,r.bF)(b,{style:{height:"80vh",width:"100%"},zoom:a.zoom,center:a.center,onReady:i.onMapReady},{default:(0,r.k6)(()=>[(0,r.bF)(g,{url:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",attribution:"© OpenStreetMap contributors"}),"esri"===a.currentBasemap?((0,r.uX)(),(0,r.Wv)(g,{key:0,url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",attribution:"Tiles © Esri — Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community"})):(0,r.Q3)("",!0),((0,r.uX)(!0),(0,r.CE)(r.FK,null,(0,r.pI)(a.markers,(e,t)=>((0,r.uX)(),(0,r.Wv)(y,{key:t,"lat-lng":e.position},{default:(0,r.k6)(()=>[(0,r.bF)(h,null,{default:(0,r.k6)(()=>[(0,r.Lk)("div",l,[(0,r.Lk)("img",{src:e.imageUrl,alt:"Uploaded Image",style:{width:"300px",height:"auto","border-radius":"5px","margin-bottom":"10px"}},null,8,c),(0,r.Lk)("p",u," Location: "+(0,s.v_)(e.position[0])+", "+(0,s.v_)(e.position[1]),1),(0,r.Lk)("p",p," Taken: "+(0,s.v_)(e.datetime),1),(0,r.Lk)("p",d," File: "+(0,s.v_)(e.filename),1)])]),_:2},1024)]),_:2},1032,["lat-lng"]))),128))]),_:1},8,["zoom","center","onReady"]),(0,r.Lk)("div",m,[(0,r.Lk)("button",{onClick:t[1]||(t[1]=e=>i.switchBasemap("osm"))},"OpenStreetMap"),(0,r.Lk)("button",{onClick:t[2]||(t[2]=e=>i.switchBasemap("esri"))},"Esri World Imagery")]),(0,r.Lk)("div",f,[(0,r.Lk)("button",{onClick:t[3]||(t[3]=(...e)=>i.downloadMap&&i.downloadMap(...e))},"Download Map")])])}n(4114),n(6573),n(8100),n(7936),n(8111),n(1701),n(9577),n(1549),n(9797),n(9631),n(5623),n(4979),n(4603),n(7566),n(8721);var h=n(1614),y=n(2929),b=n(1831),v=n.n(b),k=n(9315),L=n.n(k),w={name:"MapWithExif",components:{LMap:h.Do,LTileLayer:h.a,LMarker:h.li,LPopup:h.nA},data(){return{center:[0,0],zoom:2,markers:[],currentBasemap:"osm"}},methods:{async handleFileInput(e){const t=Array.from(e.target.files);if(!t.length)return;const n=[];await Promise.all(t.map(async e=>{try{console.log(`Processing file: ${e.name}`);const t=e.name.split(".").pop().toLowerCase();let o=e;if("heic"===t||"heif"===t){console.log(`File identified as HEIC/HEIF: ${e.name}`);const t=await e.arrayBuffer(),r=y.Ay.load(t);console.log(`Original Metadata for ${e.name}:`,r);const a=await v()({blob:e,toType:"image/jpeg"});o=new File([a],e.name.replace(/\.[^/.]+$/,".jpg"),{type:"image/jpeg"}),console.log(`Conversion successful: ${o.name}`);const i=new FileReader,s=await new Promise((e,t)=>{i.onload=function(n){try{const t=n.target.result,a=L().dump(r),i=L().insert(a,t),s=new Blob([new Uint8Array(atob(i.split(",")[1]).split("").map(e=>e.charCodeAt(0)))],{type:"image/jpeg"}),l=new File([s],o.name,{type:"image/jpeg"});console.log(`Metadata injected successfully into: ${l.name}`),e(l)}catch(a){t(a)}},i.readAsDataURL(o)}),l=r.GPSLatitude?.description,c=r.GPSLatitudeRef?.description,u=r.GPSLongitude?.description,p=r.GPSLongitudeRef?.description,d=r.DateTime?.description,m=e.name;console.log("Original Raw Latitude:",l),console.log("Original Latitude Reference:",c),console.log("Original Raw Longitude:",u),console.log("Original Longitude Reference:",p);const f=l&&c?("South latitude"===c?-1:1)*l:null,g=u&&p?("West longitude"===p?-1:1)*u:null;if(console.log("Interpreted Latitude:",f),console.log("Interpreted Longitude:",g),null!==f&&null!==g){const e=URL.createObjectURL(s);n.push({position:[f,g],datetime:d,filename:m,imageUrl:e,file:o}),console.log(`Marker added for file: ${s.name}`)}else console.warn(`No GPS data found in the original image: ${e.name}`)}else{console.log(`File is not HEIC/HEIF: ${e.name}`);const t=await e.arrayBuffer(),r=y.Ay.load(t);console.log(`Metadata for ${e.name}:`,r);const a=r.GPSLatitude?.description,i=r.GPSLatitudeRef?.description,s=r.GPSLongitude?.description,l=r.GPSLongitudeRef?.description,c=r.DateTime?.description,u=e.name,p=a&&i?("South latitude"===i?-1:1)*a:null,d=s&&l?("West longitude"===l?-1:1)*s:null;if(null!==p&&null!==d){const t=URL.createObjectURL(e);n.push({position:[p,d],datetime:c,filename:u,imageUrl:t,file:o})}}}catch(t){console.error(`Error processing file ${e.name}:`,t)}})),n.length>0?(this.markers.push(...n),this.fitToBounds()):console.warn("No valid markers to add to the map.")},async convertToBase64(e){return new Promise((t,n)=>{const o=new FileReader;o.onload=e=>t(e.target.result),o.onerror=n,o.readAsDataURL(e)})},async downloadMap(){const e={center:this.center,zoom:this.zoom,markers:[]};for(const r of this.markers){const t=await this.convertToBase64(r.file);e.markers.push({position:r.position,photo:t,datetime:r.datetime,filename:r.filename})}const t=`\n      <!DOCTYPE html>\n<html>\n<head>\n  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />\n  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"><\/script>\n</head>\n<body>\n  <div id="map" style="height: 100vh;"></div>\n  <script>\n    const mapData = ${JSON.stringify(e)};\n\n    // Initialize the map\n    const map = L.map('map').setView(mapData.center, mapData.zoom);\n\n    // Define basemaps\n    const basemaps = {\n      "OpenStreetMap": L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: "© OpenStreetMap contributors"\n      }),\n      "Esri World Imagery": L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {\n        attribution: "Tiles © Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community"\n      })\n    };\n\n    // Add the default basemap (OpenStreetMap)\n    basemaps["OpenStreetMap"].addTo(map);\n\n    // Add markers\n    mapData.markers.forEach(marker => {\n      const m = L.marker(marker.position).addTo(map);\n      m.bindPopup(\`\n        <div style="text-align: center;">\n          \x3c!-- Image --\x3e\n          <img \n            src="\${marker.photo}" \n            alt="Uploaded Image" \n            style="width: 300px; height: auto; border-radius: 5px; margin-bottom: 10px;" \n          />\n          \x3c!-- Location --\x3e\n          <p style="font-size: 12px; margin: 0; color: gray;">\n            Location: \${marker.position[0]}, \${marker.position[1]}\n          </p>\n          \x3c!-- Date/Time --\x3e\n          <p style="font-size: 12px; margin: 0; color: gray;">\n            Taken: \${marker.datetime || 'Unknown'}\n          </p>\n          \x3c!-- Filename --\x3e\n          <p style="font-size: 12px; margin: 0; color: gray;">\n            File: \${marker.filename || 'Unknown'}\n          </p>\n        </div>\n      \`);\n    });\n\n    // Add a layer control to switch basemaps\n    L.control.layers(basemaps).addTo(map);\n  <\/script>\n</body>\n</html>\n  `,n=new Blob([t],{type:"text/html"}),o=document.createElement("a");o.href=URL.createObjectURL(n),o.download="map.html",o.click()},switchBasemap(e){this.currentBasemap=e},onMapReady(e){this.map=e},fitToBounds(){if(this.markers.length>0){const e=this.markers.map(e=>e.position);this.map.fitBounds(e)}}}},x=n(1241);const O=(0,x.A)(w,[["render",g]]);var S=O,E={name:"App",components:{MapWithExif:S}};const P=(0,x.A)(E,[["render",i]]);var j=P;(0,o.Ef)(j).mount("#app")}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={exports:{}};return e[o].call(a.exports,a,a.exports,n),a.exports}n.m=e,function(){var e=[];n.O=function(t,o,r,a){if(!o){var i=1/0;for(u=0;u<e.length;u++){o=e[u][0],r=e[u][1],a=e[u][2];for(var s=!0,l=0;l<o.length;l++)(!1&a||i>=a)&&Object.keys(n.O).every(function(e){return n.O[e](o[l])})?o.splice(l--,1):(s=!1,a<i&&(i=a));if(s){e.splice(u--,1);var c=r();void 0!==c&&(t=c)}}return t}a=a||0;for(var u=e.length;u>0&&e[u-1][2]>a;u--)e[u]=e[u-1];e[u]=[o,r,a]}}(),function(){n.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return n.d(t,{a:t}),t}}(),function(){var e,t=Object.getPrototypeOf?function(e){return Object.getPrototypeOf(e)}:function(e){return e.__proto__};n.t=function(o,r){if(1&r&&(o=this(o)),8&r)return o;if("object"===typeof o&&o){if(4&r&&o.__esModule)return o;if(16&r&&"function"===typeof o.then)return o}var a=Object.create(null);n.r(a);var i={};e=e||[null,t({}),t([]),t(t)];for(var s=2&r&&o;("object"==typeof s||"function"==typeof s)&&!~e.indexOf(s);s=t(s))Object.getOwnPropertyNames(s).forEach(function(e){i[e]=function(){return o[e]}});return i["default"]=function(){return o},n.d(a,i),a}}(),function(){n.d=function(e,t){for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})}}(),function(){n.f={},n.e=function(e){return Promise.all(Object.keys(n.f).reduce(function(t,o){return n.f[o](e,t),t},[]))}}(),function(){n.u=function(e){return"js/"+e+"."+{24:"b6547ab5",71:"1e773906",249:"d83c3afb",791:"ea704907",886:"10a9970d"}[e]+".js"}}(),function(){n.miniCssF=function(e){}}(),function(){n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){var e={},t="geo_data_pictures:";n.l=function(o,r,a,i){if(e[o])e[o].push(r);else{var s,l;if(void 0!==a)for(var c=document.getElementsByTagName("script"),u=0;u<c.length;u++){var p=c[u];if(p.getAttribute("src")==o||p.getAttribute("data-webpack")==t+a){s=p;break}}s||(l=!0,s=document.createElement("script"),s.charset="utf-8",s.timeout=120,n.nc&&s.setAttribute("nonce",n.nc),s.setAttribute("data-webpack",t+a),s.src=o),e[o]=[r];var d=function(t,n){s.onerror=s.onload=null,clearTimeout(m);var r=e[o];if(delete e[o],s.parentNode&&s.parentNode.removeChild(s),r&&r.forEach(function(e){return e(n)}),t)return t(n)},m=setTimeout(d.bind(null,void 0,{type:"timeout",target:s}),12e4);s.onerror=d.bind(null,s.onerror),s.onload=d.bind(null,s.onload),l&&document.head.appendChild(s)}}}(),function(){n.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){n.p="/GeoDataPictures_app/"}(),function(){var e={524:0};n.f.j=function(t,o){var r=n.o(e,t)?e[t]:void 0;if(0!==r)if(r)o.push(r[2]);else{var a=new Promise(function(n,o){r=e[t]=[n,o]});o.push(r[2]=a);var i=n.p+n.u(t),s=new Error,l=function(o){if(n.o(e,t)&&(r=e[t],0!==r&&(e[t]=void 0),r)){var a=o&&("load"===o.type?"missing":o.type),i=o&&o.target&&o.target.src;s.message="Loading chunk "+t+" failed.\n("+a+": "+i+")",s.name="ChunkLoadError",s.type=a,s.request=i,r[1](s)}};n.l(i,l,"chunk-"+t,t)}},n.O.j=function(t){return 0===e[t]};var t=function(t,o){var r,a,i=o[0],s=o[1],l=o[2],c=0;if(i.some(function(t){return 0!==e[t]})){for(r in s)n.o(s,r)&&(n.m[r]=s[r]);if(l)var u=l(n)}for(t&&t(o);c<i.length;c++)a=i[c],n.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return n.O(u)},o=self["webpackChunkgeo_data_pictures"]=self["webpackChunkgeo_data_pictures"]||[];o.forEach(t.bind(null,0)),o.push=t.bind(null,o.push.bind(o))}();var o=n.O(void 0,[504],function(){return n(782)});o=n.O(o)})();
//# sourceMappingURL=app.c0483b18.js.map